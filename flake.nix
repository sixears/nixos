{
  inputs.nixpkgs.url = github:NixOS/nixpkgs/3ae365af; # 2023-01-14
#  inputs.home-manager.url = github:nix-community/home-manager;

  outputs = { self, nixpkgs, ... }:
        let
      hostname = "red";
    in
{
    nixosConfigurations.red = nixpkgs.lib.nixosSystem {
      system = "x86_64-linux";

      modules = [
        ({ pkgs, config, lib, nixpkgs, ... }: {
          system.stateVersion = "22.05";
          # from nixpkgs/nixos/modules/installer/scan/not-detected.nix
          # Enables non-free firmware on devices not recognized by
          # `nixos-generate-config`.
          hardware.enableRedistributableFirmware = lib.mkDefault true;

          # we need linux 5.19+ for sound support, but with 5.19.8 at least;
          # the i915 crashes the display
          boot.kernelPackages = pkgs.linuxPackagesFor pkgs.linux_latest;
          # https://wiki.archlinux.org/title/Dell_XPS_13_(9310)#Random_Hangs_on_i915_with_kernel
          # Random Hangs on i915 with kernel
          #
          #   Occasionally the laptop hangs when running the i915 Linux driver.
          #   This results in an occasional visual delay to keyboard inputs and
          #   makes the system appear to be crashing.
          #
          # The bug report for this issue can be found here:
          # https://gitlab.freedesktop.org/drm/intel/-/issues/3496
          #
          # Set panel self refresh to off in the kernel parameters:
          # i915.enable_psr=0 i915.enable_fbc=1.
          boot.kernelParams = [ "i915.enable_psr=0" "i915.enable_fbc=1" ];

          networking.hostName = hostname;
          networking.extraHosts =
            "127.0.0.1 " + hostname + ".sixears.co.uk " + hostname;

          # note that this won't effect until ethernet is actually connected
          # generated by `hex-addr red.sixears.co.uk`
          networking.networkmanager.ethernet.macAddress = "72:65:64:2e:73:69";
          # note that this won't effect until wifi is actually connected
          networking.networkmanager.wifi.macAddress =
            "Dell XPS 9315 Laptop Wireless";

          services.smartd.devices =
            [ { device="/dev/nvme0"; options = "-d nvme -W 0,70,75"; } ];

          boot.initrd.availableKernelModules = [ "xhci_pci" "nvme" "usb_storage"
                                                 "sd_mod" ];
          boot.kernelModules = [ "kvm-intel" ];
          boot.extraModulePackages = [ ];

          imports = [
            ./boot/efi.nix

            ./filesystems/std.nix
          ];
        })
      ];
    };
  };
}

#X# # repository: /nix/var/nixpkgs/nixos-22.05.2022-10-15.be44bf67
#X# # repository: /nix/var/nixpkgs/nixos-22.05.2022-09-12.bf014cad
#X# # repository: /nix/var/nixpkgs/nixos-21.11.2022-04-22.9887f024
#X#
#X# { config ? import ./nullcfg.nix, lib, options, modulesPath, pkgs, specialArgs ? {} }:
#X#
#X# let hostname = "red";
#X# in
#X#   {
#X#
#X#
#X#     nix.maxJobs = lib.mkDefault 12;
#X#
#X#     nix.nixPath =
#X#       [ # Prepend default nixPath values.
#X#   #      "nixpkgs=/nix/var/nix/profiles/per-user/root/channels/nixos-18.09"
#X#   #      "nixos-config=/etc/nixos/configuration.nix"
#X#   #      "/nix/var/nix/profiles/per-user/root/channels"
#X#         # Append our nixpkgs-overlays.
#X#   #      "nixpkgs-overlays=/etc/nixos/overlays"
#X#       ];
#X#
#X#     powerManagement.cpuFreqGovernor = "powersave";
#X#
#X#     programs.ssh.knownHosts =
#X#       { "localhost" = { publicKeyFile = ../sshkeys + "/${hostname}.pub"; }; };
#X#
#X#     # create a symlink to /etc/X11/xorg.conf for visibility
#X#     services.xserver.exportConfiguration = true;
#X#
#X#     environment.systemPackages = with pkgs; [ mkopenvpnconfs wifi ];
#X#
#X#     imports =
#X#       [ ../std.nix
#X#         ../versions/unstable.nix
#X#
#X#         ../filesystems/efi.nix
#X#         ../filesystems/mobile-music.nix
#X#         ../filesystems/local.nix
#X#         ../filesystems/usb-sda.nix
#X#
#X#         ../xserver.nix
#X#         ../xserver-dvorak.nix
#X#         ../xserver-intel.nix
#X#
#X#         ../desktop.nix
#X#         ../printing.nix
#X#         ../scanning.nix
#X#         ../finbar.nix
#X#
#X# #        ../containers-podcaster.nix
#X#         ../keyboardio.nix
#X# #        ../bluetooth.nix
#X#
#X#         ../laptop.nix
#X#         ../pulseaudio.nix
#X#
#X#         ../dkill.nix
#X#         ../openvpn.nix
#X# #        ../tmpwww.nix
#X# #        ../virtualbox.nix
#X#         ../nix-serve.nix
#X#
#X#
#X# #        ../docker.nix
#X#
#X#         ../local-home-backup.nix
#X#         ../users/people/martyn.nix
#X#         ../users/people/syncthing-martyn.nix
#X#
#X#         ../nix-serve.nix
#X#
#X# ../dns-server-cloudflare.nix
#X#
#X#         ../fwupd.nix
#X#       ];
#X#
#X#     fileSystems =
#X#       {
#X#         "/mnt/sdcard" =
#X#           {
#X#             device = "/dev/disk/by-path/pci-0000:39:00.0-usb-0:1.4:1.0-scsi-0:0:0:1-part1";
#X#             options = [ "user" "utf8" "umask=000" "noauto" "exec" "sync" ];
#X#           };
#X#       };
#X#
#X#
#X#     # SoundWire
#X# #    networking.firewall.allowedUDPPorts = [ 59010 59011 ];
#X#
#X#     # enable the CFSSL CA api-server.
#X#     services.cfssl.enable = true;
#X#     services.cfssl.port   = 59998;
#X#   }
#X#
